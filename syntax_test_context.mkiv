% SYNTAX TEST "Packages/ConTeXtTools/ConTeXt.sublime-syntax"

% <- text.tex.context

\starttext
% <- support.function.control-word.context

% LUA
\startLUA[before={\blank[small]}]
  %       ^^^^^^                 variable.parameter.key.context
  %             ^                keyword.operator.equals.context
  %       ^^^^^^^^^^^^^^^^^^^^^^ meta.environment.list.context
  context(
    5 % 2
  %   ^^^ - comment
  )
  -- context("b")
  % <- comment
  context("a")
  % <- source.lua - comment
\stopLUA

\startluacode
  context(
    5 % 2
  %   ^^^ - comment
  )
  -- context("b")
  % <- comment
  context("a")
  % <- source.lua - comment
\stopluacode

\startlua
  context(
    5 % 2
  %   ^^^ comment
  )
  -- context("b")
  % <- comment
  context("a")
  % <- source.lua comment
\stoplua

\ctxlua{
  context(
    5 % 2
  %   ^^^ comment
  )
  -- context("b")
  % <- comment
  context("a")
  % <- source.lua comment
}

\luacode{...} \lateluacode{...} \ctxluacode{...} \ctxlatelua{...}
%        ^^^                                                     source.lua
%                          ^^^                                   source.lua
%                                           ^^^                  source.lua
%                                                            ^^^ source.lua
\ctxdirectlua{...} \directlua{...}
%             ^^^                 source.lua
%                             ^^^ source.lua

% METAPOST/METAFUN
\startuniqueMPgraphic{foo}{x, y}
  % setup a pair:
  % <- comment.metapost
  pair p;  p := (\MPvar{x}, \MPvar{y});
  %              ^^^^^^            support.function.control-word.context
  %                         ^^^^^^ support.function.control-word.context
  draw (unitcircle shifted p) scaled 1cm withcolor red;
  % <- source.metapost
\stopuniqueMPgraphic

\startMP[numbering=line] draw unitdiamond; \stopMP
%        ^^^^^^^^^                         variable.parameter.key.context
%                 ^                        keyword.operator.equals.context
%        ^^^^^^^^^^^^^^                    meta.environment.list.context
%                        ^^^^^^^^^^^^^^^^^ source.metapost
\startstaticMPfigure{foo} draw unitsquare; \stopstaticMPfigure
%                         ^^^^^^^^^^^^^^^^ source.metapost
\startMPinclusions[+]{foo} draw fullcircle; \stopMPinclusions
%                          ^^^^^^^^^^^^^^^^ source.metapost

% JAVASCRIPT
\startJSpreamble foo used now
  %              ^^^          entity.name.context
  %                       ^^^ constant.other.context
  % factorial function:
  % <- comment
  function factorial(n) {
    if (n === 0 || n === 1) return 1;
    return n * factorial(n - 1)
  }
  % <- source.js
\stopJSpreamble

\startJScode bar uses foo factorial(10) \stopJScode
%            ^^^                        entity.name.context
%                     ^^^               entity.name.context
%                         ^^^^^^^^^^^^^ source.js

% XML
\startXML <div> foo </div> \stopXML
%         ^^^^^^^^^^^^^^^^ text.xml

% MATH
Adding $1$, \m{2} and \math[three]{3} gives \mathematics{6}.
%       ^                                                  meta.environment.math
%              ^                                           meta.environment.math
%                                  ^                       meta.environment.math
%                                                        ^ meta.environment.math

\startformula e^{iÏ€} = -1 \stopformula
%             ^^^^^^^^^^^ meta.environment.math

% VERBATIM
The percent sign \type[option=tex]{%} and the hash \type<<#1>> are special.
%                      ^^^^^^                                variable.parameter.key.context
%                            ^                               keyword.operator.equals.context
%                      ^^^^^^^^^^                            meta.environment.list.context
%                                  ^                         markup.raw.context - comment
%                                                         ^^ markup.raw.context - variable.parameter.tex.context

\starttyping
  [option=xml]
%  ^^^^^^     variable.parameter.key.context
%        ^    keyword.operator.equals.context
%  ^^^^^^^^^^ meta.environment.list.context
  <cd:command name="MPcolor" file="colo-ini.mkiv">
    <cd:arguments>
      <cd:resolve name="argument-color"/>
    </cd:arguments>
  </cd:command>
  % <- markup.raw.context
\stoptyping

% COMMENTS

% Lorem ipsum
% <- comment
\starthiding consectetur adipisicing elit. \stophiding
%            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ comment

% TEMPLATES a.k.a. LMX
\bTABLE
  <?lua for row=1,5 do ?>
% ^^                      entity.tag.begin.context
%   ^^^                   entity.tag.lua.context
%       ^^^^^^^^^^^^^^    source.lua
%                      ^^ entity.tag.end.context
    \bTR
      <?lua for col=1,5 do ?>
        \bTD
          cell (<?lua inject(row) ?>, <?lua inject(col) ?>)
          %           ^^^^^^                       support.function
          %                                 ^^^^^^ support.function
        \eTD
      <?lua end ?>
    \eTR
  <?lua end ?>
\eTABLE

% DEFINITIONS
\def \foo #1{!! #1 !!}
% <-                  support.function.control-word.context
%    ^^^^             entity.control-word.tex.context
%         ^^          variable.parameter.tex.context
%               ^^    variable.parameter.tex.context
%            ^^^^^^^^ meta.environment.brace.group.tex.context

\define[1] \foo {!! #1 !!}
% <-                      support.function.control-word.context
%       ^                 constant.numeric.context
%          ^^^^           entity.control-word.tex.context
%                   ^^    variable.parameter.tex.context
%                ^^^^^^^^ meta.environment.brace.group.tex.context

\starttexdefinition foo #1
% <-                       support.function.control-word.context
%                   ^^^    entity.control-word.tex.context
%                       ^^ variable.parameter.tex.context
  !! #1 !!
%    ^^                    variable.parameter.tex.context
\stoptexdefinition

% mkvi style definitions
\def \foo #a[#{b}]{
%         ^^      variable.parameter.tex.context
%            ^^^^ variable.parameter.tex.context
  !! #a !! #{b} !!
%    ^^         variable.parameter.tex.context
%          ^^^^ variable.parameter.tex.context
}

\stoptext
% <- support.function.control-word.context
