/*D We use a couple of HTML tags. We chose short tags because it makes the
 *D files|/|strings significantly shorter than using long descriptive names.
 *D Here are their meanings:
 *D
 *D \starttabulate[|rT|lp|]
 *D   \NC <c> \NC control sequence \type{\foo} \NC\NR
 *D   \NC <l> \NC the backslash in a control sequence \NC\NR
 *D   \NC <d> \NC delimiters, i.e.\ the brackets \type{[]} in \type{[...]};
 *D               also covers braces \type{{...}} and any other delimiters
 *D               \NC\NR
 *D   \NC <n> \NC number \NC\NR
 *D   \NC <k> \NC key, as in \type{key=value} \NC\NR
 *D   \NC <e> \NC equals, as in \type{key=value} \NC\NR
 *D   \NC <m> \NC comma, as in \type{key1=val1, key2=val2} \NC\NR
 *D   \NC <v> \NC default value \NC\NR
 *D   \NC <t> \NC type name, e.g.\ \type{CSNAME} means a control sequence
 *D               name \NC\NR
 *D   \NC <h> \NC inherits (heritage), styles the bit of text \quote{inherits:}
 *D               in \type{inherits: \foo} \NC\NR
 *D   \NC <o> \NC optional argument \NC\NR
 *D \stoptabulate
 *D
 *D The approach we take to styling elements is (via the excellent
 *D \type{mdpopups}) to provide the following additional CSS variables for use
 *D in this file. You can then choose to use them for whatever purpose you
 *D wish; what we shall do by default is use them to style the aforementioned
 *D tags in the natural way.
 *D
 *D \startitemize[columns, two, packed]
 *D   \startitem \type{--comma-background}             \stopitem
 *D   \startitem \type{--comma-color}                  \stopitem
 *D   \startitem \type{--comma-style}                  \stopitem
 *D   \startitem \type{--control-sequence-background} \stopitem
 *D   \startitem \type{--control-sequence-color}      \stopitem
 *D   \startitem \type{--control-sequence-style}      \stopitem
 *D   \startitem \type{--delimiter-background}        \stopitem
 *D   \startitem \type{--delimiter-color}             \stopitem
 *D   \startitem \type{--delimiter-style}             \stopitem
 *D   \startitem \type{--equals-background}           \stopitem
 *D   \startitem \type{--equals-color}                \stopitem
 *D   \startitem \type{--equals-style}                \stopitem
 *D   \startitem \type{--key-background}              \stopitem
 *D   \startitem \type{--key-color}                   \stopitem
 *D   \startitem \type{--key-style}                   \stopitem
 *D   \startitem \type{--numeric-background}          \stopitem
 *D   \startitem \type{--numeric-color}               \stopitem
 *D   \startitem \type{--numeric-style}               \stopitem
 *D   \startitem \type{--slash-background}            \stopitem
 *D   \startitem \type{--slash-color}                 \stopitem
 *D   \startitem \type{--slash-style}                 \stopitem
 *D   \startitem \type{--type-background}             \stopitem
 *D   \startitem \type{--type-color}                  \stopitem
 *D   \startitem \type{--type-style}                  \stopitem
 *D \stopitemize
 */

html {
    --inner-background-color: var(--background);
    --outer-background-color:
        color(var(--foreground) blend(var(--background) 20%));
}

html, body {
    margin: 0rem;
    padding: 0rem;
}

/*D We use this approach with an \quote{outer} and an \quote{inner} element to
 *D get a border around the pop||ups. There is probably a better way, but I'm
 *D not that fluent in CSS.
 */
div.outer {
    display: block;
    background-color: var(--outer-background-color);
    padding: 0.1rem;
    margin: 0rem;
}

div.inner {
    display: block;
    background-color: var(--inner-background-color);
    padding: 0.5rem;
    margin: 0.1rem;
}

div.popup o {
    font-style: italic;
}

div.popup v {
    text-decoration: underline;
}

div.popup m {
    font-style: var(--comma-style);
    color: var(--comma-color);
    background-color: var(--comma-background);
}

div.popup c {
    font-style: var(--control-sequence-style);
    color: var(--control-sequence-color);
    background-color: var(--control-sequence-background);
}

div.popup d {
    font-style: var(--delimiter-style);
    color: var(--delimiter-color);
    background-color: var(--delimiter-background);
}

div.popup e {
    font-style: var(--equals-style);
    color: var(--equals-color);
    background-color: var(--equals-background);
}

div.popup k {
    font-style: var(--key-style);
    color: var(--key-color);
    background-color: var(--key-background);
}

div.popup n {
    font-style: var(--numeric-style);
    color: var(--numeric-color);
    background-color: var(--numeric-background);
}

div.popup l {
    font-style: var(--slash-style);
    color: var(--slash-color);
    background-color: var(--slash-background);
}

/* div.popup t {
 *     font-style: var(--type-style);
 *     color: var(--type-color);
 *     background-color: var(--type-background);
 * }
 */
