/*D We use a couple of HTML tags. We chose short tags because it makes the
 *D files|/|strings significantly shorter than using long descriptive names.
 *D Here are their meanings:
 *D
 *D \starttabulate[|rT|lp|]
 *D   \NC <con> \NC control sequence \type{\foo} \NC\NR
 *D   \NC <sco> \NC the backslash in a control sequence \NC\NR
 *D   \NC <flo> \NC start/stop control sequence \type{\startfoo} \NC\NR
 *D   \NC <sfl> \NC the backslash in a start/stop control sequence \NC\NR
 *D   \NC <opt> \NC optional argument \NC\NR
 *D   \NC <pun> \NC delimiters/punctuation, i.e.\ the brackets \type{[]} in
 *D                 \type{[...]}; also covers braces \type{{...}} and any other
 *D                 delimiters \NC\NR
 *D   \NC <key> \NC key, as in \type{key=value} \NC\NR
 *D   \NC <equ> \NC equals, as in \type{key=value} \NC\NR
 *D   \NC <val> \NC default value \NC\NR
 *D   \NC <num> \NC number \NC\NR
 *D   \NC <typ> \NC type name, e.g.\ \type{CSNAME} means a control sequence
 *D                 name \NC\NR
 *D   \NC <com> \NC comma, as in \type{key1=val1, key2=val2} \NC\NR
 *D   \NC <inh> \NC inherits (heritage), styles the bit of text
 *D                 \quote{inherits:} in \type{inherits: \foo} \NC\NR
 *D \stoptabulate
 *D
 *D The approach we take to styling elements is to provide some additional CSS
 *D variables for use in this file. You can then choose to use them for
 *D whatever purpose you wish; what we shall do by default is use them to style
 *D the various tags in the natural way.
 */

html {
    --inner-background-color: var(--background);
    --outer-background-color:
        color(var(--foreground) blend(var(--background) 20%));
}

html, body {
    margin: 0rem;
    padding: 0rem;
}

/*D We use this approach with an \quote{outer} and an \quote{inner} element to
 *D get a border around the pop||ups. There is probably a better way, but I'm
 *D not that fluent in CSS.
 */
div.outer {
    display: block;
    background-color: var(--outer-background-color);
    padding: 0.1rem;
    margin: 0rem;
}

div.inner {
    display: block;
    background-color: var(--inner-background-color);
    padding: 0.5rem;
    margin: 0.1rem;
}

div.popup opt {
    font-style: italic;
}

div.popup inh {
    font-style: italic;
}

div.popup val {
    text-decoration: underline;
}

div.popup con {
    font-style: var(--control-sequence-style);
    font-weight: var(--control-sequence-weight);
    color: var(--control-sequence-color);
    background-color: var(--control-sequence-background);
}

div.popup sco {
    font-style: var(--slash-control-sequence-style);
    font-weight: var(--slash-control-sequence-weight);
    color: var(--slash-control-sequence-color);
    background-color: var(--slash-control-sequence-background);
}

div.popup flo {
    font-style: var(--flow-control-sequence-style);
    font-weight: var(--flow-control-sequence-weight);
    color: var(--flow-control-sequence-color);
    background-color: var(--flow-control-sequence-background);
}

div.popup sfl {
    font-style: var(--slash-flow-control-sequence-style);
    font-weight: var(--slash-flow-control-sequence-weight);
    color: var(--slash-flow-control-sequence-color);
    background-color: var(--slash-flow-control-sequence-background);
}

div.popup mod {
    font-style: var(--modifier-control-sequence-style);
    font-weight: var(--modifier-control-sequence-weight);
    color: var(--modifier-control-sequence-color);
    background-color: var(--modifier-control-sequence-background);
}

div.popup smo {
    font-style: var(--slash-modifier-control-sequence-style);
    font-weight: var(--slash-modifier-control-sequence-weight);
    color: var(--slash-modifier-control-sequence-color);
    background-color: var(--slash-modifier-control-sequence-background);
}

div.popup sto {
    font-style: var(--storage-control-sequence-style);
    font-weight: var(--storage-control-sequence-weight);
    color: var(--storage-control-sequence-color);
    background-color: var(--storage-control-sequence-background);
}

div.popup sst {
    font-style: var(--slash-storage-control-sequence-style);
    font-weight: var(--slash-storage-control-sequence-weight);
    color: var(--slash-storage-control-sequence-color);
    background-color: var(--slash-storage-control-sequence-background);
}

div.popup lan {
    font-style: var(--language-control-sequence-style);
    font-weight: var(--language-control-sequence-weight);
    color: var(--language-control-sequence-color);
    background-color: var(--language-control-sequence-background);
}

div.popup sla {
    font-style: var(--slash-language-control-sequence-style);
    font-weight: var(--slash-language-control-sequence-weight);
    color: var(--slash-language-control-sequence-color);
    background-color: var(--slash-language-control-sequence-background);
}

div.popup pun {
    font-style: var(--delimiter-style);
    font-weight: var(--delimiter-weight);
    color: var(--delimiter-color);
    background-color: var(--delimiter-background);
}

div.popup key {
    font-style: var(--key-style);
    font-weight: var(--key-weight);
    color: var(--key-color);
    background-color: var(--key-background);
}

div.popup equ {
    font-style: var(--equals-style);
    font-weight: var(--equals-weight);
    color: var(--equals-color);
    background-color: var(--equals-background);
}

div.popup num {
    font-style: var(--numeric-style);
    font-weight: var(--numeric-weight);
    color: var(--numeric-color);
    background-color: var(--numeric-background);
}

div.popup com {
    font-style: var(--comma-style);
    font-weight: var(--comma-weight);
    color: var(--comma-color);
    background-color: var(--comma-background);
}
