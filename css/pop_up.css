/* We use a couple of HTML tags. We chose short tags because it makes the
 * files/strings significantly shorter than using long descriptive names.
 * Here are their meanings:
 *
 * | Tag     | Description                                                    |
 * | ------- | -------------------------------------------------------------- |
 * | `<con>` | control sequence `\foo`                                        |
 * | `<sco>` | the backslash in a control sequence                            |
 * | `<flo>` | start/stop control sequence `\startfoo`                        |
 * | `<sfl>` | the backslash in a start/stop control sequence                 |
 * | `<opt>` | optional argument                                              |
 * | `<pun>` | delimiters/punctuation, i.e. the brackets `[]` in `[...]`;     |
 * |         | also covers braces `{...}` and any other delimiters            |
 * | `<key>` | key, as in `key=value`                                         |
 * | `<equ>` | equals, as in `key=value`                                      |
 * | `<val>` | default value                                                  |
 * | `<par>` | argument parameter, i.e. something like `#1`                   |
 * | `<num>` | number                                                         |
 * | `<wor>` | keyword, as in units e.g. the `pt` in `12pt`                   |
 * | `<typ>` | type name, e.g. `CSNAME` means a control sequence name         |
 * | `<com>` | comma, as in `key1=val1, key2=val2`                            |
 * | `<inh>` | inherits (heritage), styles the bit of text "inherits:" in     |
 * |         | `inherits: \foo`                                               |
 *
 * The approach we take to styling elements is to provide some additional CSS
 * variables for use in this file. You can then choose to use them for whatever
 * purpose you wish; what we shall do by default is use them to style the
 * various tags in the natural way.
 */

html {
    --inner-background-color: var(--background);
    --outer-background-color:
        color(var(--foreground) blend(var(--background) 20%));
    margin: 0;
    padding: 0;
}

body {
    margin: 0.15rem;
    padding: 0.15rem;
}

div.popup opt {
    font-style: italic;
}

div.popup inh {
    font-style: italic;
}

div.popup val {
    text-decoration: underline;
}

div.popup con {
    background-color: var(--control-sequence-background);
    color: var(--control-sequence-color);
    font-style: var(--control-sequence-style);
    font-weight: var(--control-sequence-weight);
}

div.popup sco {
    background-color: var(--slash-control-sequence-background);
    color: var(--slash-control-sequence-color);
    font-style: var(--slash-control-sequence-style);
    font-weight: var(--slash-control-sequence-weight);
}

div.popup flo {
    background-color: var(--flow-control-sequence-background);
    color: var(--flow-control-sequence-color);
    font-style: var(--flow-control-sequence-style);
    font-weight: var(--flow-control-sequence-weight);
}

div.popup sfl {
    background-color: var(--slash-flow-control-sequence-background);
    color: var(--slash-flow-control-sequence-color);
    font-style: var(--slash-flow-control-sequence-style);
    font-weight: var(--slash-flow-control-sequence-weight);
}

div.popup mod {
    background-color: var(--modifier-control-sequence-background);
    color: var(--modifier-control-sequence-color);
    font-style: var(--modifier-control-sequence-style);
    font-weight: var(--modifier-control-sequence-weight);
}

div.popup smo {
    background-color: var(--slash-modifier-control-sequence-background);
    color: var(--slash-modifier-control-sequence-color);
    font-style: var(--slash-modifier-control-sequence-style);
    font-weight: var(--slash-modifier-control-sequence-weight);
}

div.popup sto {
    background-color: var(--storage-control-sequence-background);
    color: var(--storage-control-sequence-color);
    font-style: var(--storage-control-sequence-style);
    font-weight: var(--storage-control-sequence-weight);
}

div.popup sst {
    background-color: var(--slash-storage-control-sequence-background);
    color: var(--slash-storage-control-sequence-color);
    font-style: var(--slash-storage-control-sequence-style);
    font-weight: var(--slash-storage-control-sequence-weight);
}

div.popup lan {
    background-color: var(--language-control-sequence-background);
    color: var(--language-control-sequence-color);
    font-style: var(--language-control-sequence-style);
    font-weight: var(--language-control-sequence-weight);
}

div.popup sla {
    background-color: var(--slash-language-control-sequence-background);
    color: var(--slash-language-control-sequence-color);
    font-style: var(--slash-language-control-sequence-style);
    font-weight: var(--slash-language-control-sequence-weight);
}

div.popup pun {
    background-color: var(--delimiter-background);
    color: var(--delimiter-color);
    font-style: var(--delimiter-style);
    font-weight: var(--delimiter-weight);
}

div.popup key {
    background-color: var(--key-background);
    color: var(--key-color);
    font-style: var(--key-style);
    font-weight: var(--key-weight);
}

div.popup equ {
    background-color: var(--equals-background);
    color: var(--equals-color);
    font-style: var(--equals-style);
    font-weight: var(--equals-weight);
}

div.popup num {
    background-color: var(--numeric-background);
    color: var(--numeric-color);
    font-style: var(--numeric-style);
    font-weight: var(--numeric-weight);
}

div.popup wor {
    background-color: var(--keyword-background);
    color: var(--keyword-color);
    font-style: var(--keyword-style);
    font-weight: var(--keyword-weight);
}

div.popup com {
    background-color: var(--comma-background);
    color: var(--comma-color);
    font-style: var(--comma-style);
    font-weight: var(--comma-weight);
}

div.popup par {
    background-color: var(--parameter-background);
    color: var(--parameter-color);
    font-style: var(--parameter-style);
    font-weight: var(--parameter-weight);
}
